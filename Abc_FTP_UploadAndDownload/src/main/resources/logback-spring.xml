<?xml version="1.0" encoding="UTF-8"?>

<!-- scan="true"开启对配置信息的自动扫描(默认时间为60秒扫描一次) 注:当此文件的配置信息发生变化时,此设置的作用就体现出来了,不需要重启服务 -->
<configuration scan="true">

	<!-- 通过property标签,来存放key-value数据,便于后面的动态获取,提高程序的灵活性 -->
	<property name="logFilePositionDir"
		value="C:/Users/dengshuai.ASPIRE/Desktop/log" />

	<!-- >>>>>>>>>>>>>>>>>>>>>>>>>配置appender(可以配置多个)>>>>>>>>>>>>>>>>>>>>>>>>> -->
	<!-- 
	    name:自取即可, 
	    class:加载指定类(ch.qos.logback.core.ConsoleAppender类会将日志输出到>>>控制台), 
		patter:指定输出的日志格式 
	-->
	<appender name="consoleAppender"
		class="ch.qos.logback.core.ConsoleAppender">
		<encoder>
			<pattern>%d{yyy MMM dd HH:mm:ss.SSS} [%thread] %-5level %logger{36}:%L- %msg%n
			</pattern>
		</encoder>
	</appender>

	<!-- 
		name:自取即可, 
		class:加载指定类(ch.qos.logback.core.rolling.RollingFileAppender类会将日志输出到>>>指定的文件中), 
		patter:指定输出的日志格式 file:指定存放日志的文件(如果无,则自动创建) rollingPolicy:滚动策略>>>每天结束时，都会将该天的日志存为指定的格式的文件 
		FileNamePattern：文件的全路径名模板 (注:如果最后结尾是gz或者zip等的话,那么会自动打成相应压缩包) 
	-->
	<appender name="fileAppender"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<!-- 把日志文件输出到:项目启动的目录下的log文件夹(无则自动创建)下 -->
		<file>log/log.log</file>
		<!-- 把日志文件输出到:name为logFilePositionDir的property标签指定的位置下 -->
		<!-- <file>${logFilePositionDir}/log.log</file> -->
		<!-- 把日志文件输出到:当前磁盘下的log文件夹(无则自动创建)下 -->
		<!-- <file>/log/log.log</file> -->
		<rollingPolicy
			class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!-- TimeBasedRollingPolicy策略会将过时的日志，另存到指定的文件中(无该文件则创建) -->
			<!-- 把因为 过时 或 过大  而拆分后的文件也保存到目启动的目录下的log文件夹下  -->
			<fileNamePattern>log/log.%d{yyyy-MM-dd}.%i.log
			</fileNamePattern>
			<!-- 设置过时时间(单位:<fileNamePattern>标签中%d里最小的时间单位) -->
			<!-- 系统会删除(分离出去了的)过时了的日志文件 -->
			<!-- 本人这里:保存以最后一次日志为准,往前7天以内的日志文件 -->
			<MaxHistory>
				7
			</MaxHistory>
			<!-- 滚动策略可以嵌套； 
			         这里嵌套了一个SizeAndTimeBasedFNATP策略，
			            主要目的是: 在每天都会拆分日志的前提下，
			            当该天的日志大于规定大小时， 
				        也进行拆分并以【%i】进行区分，i从0开始 
		    -->
			<timeBasedFileNamingAndTriggeringPolicy
				class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>5MB</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
		</rollingPolicy>
		<encoder>
			<pattern>%d{yyy MMM dd HH:mm:ss.SSS} [%thread] %-5level %logger{36}:%L- %msg%n
			</pattern>
		</encoder>
	</appender>

	<!-- >>>>>>>>>>>>>>>>>>>>>>>>>>>>>使用appender>>>>>>>>>>>>>>>>>>>>>>>>>>>>> -->
	<!-- 指定[哪个包]下使用[哪个appender],并[设定日志级别] -->
	<!-- 日志级别: trace|debug|info|warn|error|fatal -->
	<logger name="com" level="debug">
		<!-- 指定使用哪个appender -->
		<appender-ref ref="fileAppender" />
	</logger>

	<!-- root:logger的根节点,appender-ref:确定使用哪个appender,将日志信息显示在console -->
	<!-- 
		注:如果不指定appender或则指定的是输出到文件的appender的话,    
		       那么SpringBoot启动后,将不会在console打印任何信息 
	-->
	<root level="info">
		<appender-ref ref="consoleAppender" />
	</root>
</configuration>